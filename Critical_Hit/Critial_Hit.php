<?php
/**
 * Plugin Name: Hit Counter
 * Plugin URI: https://github.com/matdombrock/WP_Critical_Hit
 * Description: Counts the hits on the site.
 * Version: 0.5
 * Author: Mathieu Dombrock
 * Author URI: http://myceliumzero.com
 * License: GPL2
 */

//DB STUFF
function CH_activate()
{
	//This function sets up the database that we will be using
	global $wpdb;//Makes sure that this function has access to the main WP database, this class is requred to access it. 
	$table_name = $wpdb -> prefix . 'critHit';//This makes sure that we are using the users desired table prefix, this ensure compatibility with multi-site installs. 
	//It aslo names the table we want to use
	if ($wpdb->get_var('SHOW TABLES LIKE ' . $table_name) != $table_name)//Checks to make sure see if our table already exists, if it doesnt we will make it now
	{
		//The following variable will be our SQL query, it is important to make sure each argument is on a new line
		//This sets up the new table for us as well as specifying the names and attributes of each column in that table
		$sql = 'CREATE TABLE ' .$table_name . '(
			id INTEGER(10) UNSIGNED AUTO_INCREMENT,
			hit_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
			user_agent VARCHAR(255),
			PRIMARY KEY  (id) )';
			//^IN THE ABOVE CODE^: 
				//First we set the Column for 'id', it will be auto-incermented up by one for every new row we create
				//Then we create the column for 'hit_date' and set it to use the current time-stamp generated by the server
				//Then we create a column for the 'user_agent' with a char. limit of 255
				//Last we set the primary key to be the 'id'

			//Below we set up the option to upgrade the plugin if need be
			require_once(ABSPATH . 'wp-admin/includes/upgrade.php');
			dbDelta($sql);
			add_option('critHit_database_version','1.0');
	}

	$text = 'Plugin Initialized';//Set some testing text that will be input into the DB to make sure that the plugin is wokring

	$wpdb->insert( //insert into out DB
		$table_name, 
		array( 
			'user_agent' => $text, //insert the value of the variable '$text' into the first row of our new table with the column name 'user_agent'
		) 
	);
}


add_action('wp_head','hit_count');//tells WP to add the function 'hit_count' to the header of the page

function hit_count()
{
	global $wpdb;//This makes sure we have access to the $wpdb class inside this function, we need this to do anything with the WP DB. 
	$table_name = $wpdb -> prefix . 'critHit';//This makes sure that we are using the users desired table prefix, this ensure compatibility with multi-site installs. 
	//It aslo names the table we want to use
	$u_agent = $_SERVER['HTTP_USER_AGENT'];//This makes a variable with a value respresenting the visitors user agent
	$wpdb->insert( //inserts some data into our database
		$table_name, 
		array( 
			'user_agent' => $u_agent, //inserts our u_agent variable into the table column with the name 'user_agent'
		) 
	);
}
/**
 * Add a widget to the dashboard.
 *
 * This function is hooked into the 'wp_dashboard_setup' action below.
 */
function add_dashboard_widgets() {

	wp_add_dashboard_widget(
                 'CritHit',         // Widget slug.
                 'Critical-Hit',         // Title.
                 'dashboard_widget_function' // Display function.
        );	
}
add_action( 'wp_dashboard_setup', 'add_dashboard_widgets' );
/**
 * Create the function to output the contents of our Dashboard Widget.
 */
function dashboard_widget_function() {

	global $wpdb;//This makes sure we have access to the $wpdb class inside this function, we need this to do anything with the WP DB.
	$table_name = $wpdb -> prefix . 'critHit';//This makes sure that we are using the users desired table prefix, this ensure compatibility with multi-site installs. 
	//It aslo names the table we want to use
	$user_count = $wpdb->get_var( "SELECT COUNT(*) FROM $table_name");//Counts the amount of rows in our database,
	$user_count = $user_count -1; //Makes sure we account for the test during initialization
	echo "<p>Total Hits so far <strong> {$user_count} </strong></p>";//write some stuff into the widget
	echo "</P>";
	echo "Recent Broswers: <P> ";
	$retrieve_data = $wpdb->get_results( "SELECT * FROM $table_name" );//Grabs all the data from our table
	foreach ($retrieve_data as $retrieved_data){ //runs a loop so we can output all the data, you might want to make this a shorter loop.
		echo "<P>".$retrieved_data->user_agent;//outputs the data from each 'user_agent' column
		echo "</br>".$retrieved_data->hit_date;//outputs the data from each 'hit_date' column
	}
}

register_activation_hook(__FILE__,'CH_activate');//makes sure we create the new table when we activate this plugin
